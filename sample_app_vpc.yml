AWSTemplateFormatVersion: 2010-09-09
Description: "Prepare sample environment by adding a VPC, subnets, security-groups etc"
Metadata:
    AWS::CloudFormation::Interface:
        ParameterGroups:
            - Label:
                  default: "Environment"
              Parameters:
                  - Prefix
            - Label:
                  default: "VPC Configuration"
              Parameters:
                  - VPCCidr
                  - SubnetBits
                  - Zone1
                  - Zone2
            - Label:
                  default: "EC2 Configuration"
              Parameters:
                  - AppAMI
                  - InstanceType
                  - KeyPairName
                  - SSHLocation
        ParameterLabels:
            Prefix:
                default: "Prefix"
            VPCCidr:
                default: "VPC CIDR"
            SubnetBits:
                default: "Subnet Bits"
            Zone1:
                default: "Availability Zone 1"
            Zone2:
                default: "Availability Zone 2"
            AppAMI:
                default: "AMI for App Instance"
            KeyPairName:
                default: "EC2 Key Pair"
            InstanceType:
                default: "Instance Type"

Parameters:
    Prefix:
        Description: Name tag prefix that's added to all the resources
        Type: String
    VPCCidr:
        Description: VPC CidrBlock
        Type: String
        Default: 10.0.0.0/16
    SubnetBits:
        Description: Number of bits in the subnet (eg. For /24 its 8, /25 its /7, /26 its /6) 32 minus required bits in subnet mask)
        Type: String
        Default: 8
    Zone1:
        Description: Availability Zone 1
        Type: AWS::EC2::AvailabilityZone::Name
    Zone2:
        Description: Availability Zone 2
        Type: AWS::EC2::AvailabilityZone::Name
    KeyPairName:
        Description: SSH Keypair Name to use for the App EC2 Instance
        Type: AWS::EC2::KeyPair::KeyName
    AppAMI:
        Description: AMI to use (valtix-default is Centos 7 image with docker and sample hello world app in us-east-1,2 and us-west-1,2. Use ubuntu-1804 to install Ubuntu 18.04 with sample hello world app.  For other regions provide an AMI). Set to blank if you don't want to create App EC2 instance
        Type: String
        Default: valtix-default
    InstanceType:
        Description: EC2 instance type
        Type: String
        Default: t3a.small
        AllowedValues:
            - t2.nano
            - t2.micro
            - t3a.small
            - t3a.medium
        ConstraintDescription: must be a valid EC2 instance type

Mappings:
    AppImage:
        us-east-1:
            ami: ami-0022f774911c1d690
            ubuntu1804: ami-00ddb0e5626798373
        us-east-2:
            ami: ami-05a3974d83591c4d7
            ubuntu1804: ami-0dd9f0e7df0f0a138
        us-west-1:
            ami: ami-0817f34c39fc98725
            ubuntu1804: ami-0a741b782c2c8632d
        us-west-2:
            ami: ami-0bd3005085bd65af7
            ubuntu1804: ami-0ac73f33a1888c64a
        ca-central-1:
            ubuntu1804: ami-0e625dfca3e5a33bd
        eu-central-1:
            ubuntu1804: ami-0e1ce3e0deb8896d2
        eu-north-1:
            ubuntu1804: ami-01996625fff6b8fcc
        eu-south-1:
            ubuntu1804: ami-0e82abf811ef58145
        eu-west-1:
            ubuntu1804: ami-0dc8d444ee2a42d8a
        eu-west-2:
            ubuntu1804: ami-0e169fa5b2b2f88ae
        eu-west-3:
            ubuntu1804: ami-089d839e690b09b28
Conditions:
    UseValtixDefaultAMI:
        Fn::Equals:
            - Ref: AppAMI
            - "valtix-default"
    UseUbuntu1804AMI:
        Fn::Equals:
            - Ref: AppAMI
            - "ubuntu-1804"
Resources:
    ValtixVPC:
        Type: "AWS::EC2::VPC"
        Properties:
            CidrBlock:
                Ref: VPCCidr
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-vpc"
    ValtixInternetGateway:
        Type: "AWS::EC2::InternetGateway"
        Properties:
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-igw"
    ValtixIGWAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId:
                Ref: ValtixVPC
            InternetGatewayId:
                Ref: ValtixInternetGateway
    ValtixAppsSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone:
                Ref: Zone1
            VpcId:
                Ref: ValtixVPC
            CidrBlock:
                Fn::Select:
                    - 0
                    - Fn::Cidr:
                          - Ref: VPCCidr
                          - 8
                          - Ref: SubnetBits
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-z1-apps"
    ValtixAppsSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone:
                Ref: Zone2
            VpcId:
                Ref: ValtixVPC
            CidrBlock:
                Fn::Select:
                    - 3
                    - Fn::Cidr:
                          - Ref: VPCCidr
                          - 8
                          - Ref: SubnetBits
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-z2-apps"
    RouteTableApps1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId:
                Ref: ValtixVPC
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-z1-apps"
    RouteTableApps2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId:
                Ref: ValtixVPC
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-z2-apps"
    InternetRouteApps1:
        Type: AWS::EC2::Route
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId:
                Ref: ValtixInternetGateway
            RouteTableId:
                Ref: RouteTableApps1
    InternetRouteApps2:
        Type: AWS::EC2::Route
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId:
                Ref: ValtixInternetGateway
            RouteTableId:
                Ref: RouteTableApps2
    AppsSubnetRouteTableAssociation1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId:
                Ref: RouteTableApps1
            SubnetId:
                Ref: ValtixAppsSubnet1
    AppsSubnetRouteTableAssociation2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId:
                Ref: RouteTableApps2
            SubnetId:
                Ref: ValtixAppsSubnet2
    SecurityGroupApps:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupName:
                Fn::Sub: "${Prefix}-apps"
            GroupDescription: "Security group for the apps, used by applications"
            VpcId:
                Ref: ValtixVPC
            SecurityGroupEgress:
                - IpProtocol: -1
                  FromPort: "0"
                  ToPort: "0"
                  CidrIp: 0.0.0.0/0
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: "22"
                  ToPort: "22"
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: "80"
                  ToPort: "80"
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: "8000"
                  ToPort: "8000"
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: "443"
                  ToPort: "443"
                  CidrIp: 0.0.0.0/0
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-apps"
    SpokeIAMRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName:
                Fn::Sub: "${Prefix}-spoke-role"
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                          Service:
                              - ec2.amazonaws.com
                      Action: sts:AssumeRole
            Path: /
            Policies:
                - PolicyName: spoke-iam-policy
                  PolicyDocument:
                      Version: "2012-10-17"
                      Statement:
                          - Effect: Allow
                            Action: "*"
                            Resource: "*"
    SpokeInstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            InstanceProfileName:
                Fn::Sub: "${Prefix}-instance-profile"
            Path: /
            Roles:
                - !Ref SpokeIAMRole
    AppInstance1withValtixDefault:
        Type: AWS::EC2::Instance
        Condition: UseValtixDefaultAMI
        Properties:
            AvailabilityZone:
                Ref: Zone1
            ImageId:
                Fn::FindInMap: [AppImage, Ref: "AWS::Region", ami]
            InstanceType:
                Ref: InstanceType
            IamInstanceProfile:
                Ref: SpokeInstanceProfile
            KeyName:
                Ref: KeyPairName
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  SubnetId:
                      Ref: ValtixAppsSubnet1
                  GroupSet:
                      - Ref: SecurityGroupApps
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-z1-app"
                - Key: Component
                  Value: frontend
                - Key: Application 
                  Value: Web
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    yum -y install wget
        DependsOn: [ValtixIGWAttachment, ValtixInternetGateway, AppsSubnetRouteTableAssociation1, InternetRouteApps1]
    AppInstance2withValtixDefault:
        Type: AWS::EC2::Instance
        Condition: UseValtixDefaultAMI
        Properties:
            AvailabilityZone:
                Ref: Zone2
            ImageId:
                Fn::FindInMap: [AppImage, Ref: "AWS::Region", ami]
            InstanceType:
                Ref: InstanceType
            IamInstanceProfile:
                Ref: SpokeInstanceProfile
            KeyName:
                Ref: KeyPairName
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  SubnetId:
                      Ref: ValtixAppsSubnet2
                  GroupSet:
                      - Ref: SecurityGroupApps
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-z2-app"
                - Key: Component
                  Value: backend
                - Key: Application 
                  Value: Web
            UserData:
                Fn::Base64: !Sub |
                    #! /bin/bash
                    yum -y install wget
        DependsOn: [ValtixIGWAttachment, ValtixInternetGateway, AppsSubnetRouteTableAssociation1, InternetRouteApps2]
    AppInstance1withUbuntu1804:
        Type: AWS::EC2::Instance
        Condition: UseUbuntu1804AMI
        Properties:
            AvailabilityZone:
                Ref: Zone1
            ImageId:
                Fn::FindInMap: [AppImage, Ref: "AWS::Region", ubuntu1804]
            InstanceType:
                Ref: InstanceType
            KeyName:
                Ref: KeyPairName
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  SubnetId:
                      Ref: ValtixAppsSubnet1
                  GroupSet:
                      - Ref: SecurityGroupApps
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-z1-app"
            UserData:
                Fn::Base64: !Sub |
                    #! /bin/bash
                    apt-get update
                    apt-get upgrade -y
                    apt-get install -y apache2
                    apt-get install -y wget
                    cat <<EOF > /var/www/html/index.html
                    <html><body><h1>Hello World</h1>
                    <p>Welcome to App Instance 1</p>
                    </body></html>
                    EOF
    AppInstance2withUbuntu1804:
        Type: AWS::EC2::Instance
        Condition: UseUbuntu1804AMI
        Properties:
            AvailabilityZone:
                Ref: Zone2
            ImageId:
                Fn::FindInMap: [AppImage, Ref: "AWS::Region", ubuntu1804]
            InstanceType:
                Ref: InstanceType
            KeyName:
                Ref: KeyPairName
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  SubnetId:
                      Ref: ValtixAppsSubnet2
                  GroupSet:
                      - Ref: SecurityGroupApps
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-z2-app"
            UserData:
                Fn::Base64: !Sub |
                    #! /bin/bash
                    apt-get update
                    apt-get upgrade -y
                    apt-get install -y apache2
                    apt-get install -y wget
                    cat <<EOF > /var/www/html/index.html
                    <html><body><h1>Hello World</h1>
                    <p>Welcome to App Instance 2</p>
                    </body></html>
                    EOF
Outputs:
    AppInstance1withValtixDefaultIp:
        Condition: UseValtixDefaultAMI
        Description: "AppInstance 1 IP"
        Value:
            Fn::Join:
                [
                    ", ",
                    [
                        Fn::GetAtt: AppInstance1withValtixDefault.PrivateIp,
                        Fn::GetAtt: AppInstance1withValtixDefault.PublicIp,
                    ],
                ]
    AppInstance2withValtixDefaultIp:
        Condition: UseValtixDefaultAMI
        Description: "AppInstance 2 IP"
        Value:
            Fn::Join:
                [
                    ", ",
                    [
                        Fn::GetAtt: AppInstance2withValtixDefault.PrivateIp,
                        Fn::GetAtt: AppInstance2withValtixDefault.PublicIp,
                    ],
                ]
    AppInstance1withUbuntu1804Ip:
        Condition: UseUbuntu1804AMI
        Description: "AppInstance 1 IP"
        Value:
            Fn::Join:
                [
                    ", ",
                    [
                        Fn::GetAtt: AppInstance1withUbuntu1804.PrivateIp,
                        Fn::GetAtt: AppInstance1withUbuntu1804.PublicIp,
                    ],
                ]
    AppInstance2withUbuntu1804Ip:
        Condition: UseUbuntu1804AMI
        Description: "AppInstance 2 IP"
        Value:
            Fn::Join:
                [
                    ", ",
                    [
                        Fn::GetAtt: AppInstance2withUbuntu1804.PrivateIp,
                        Fn::GetAtt: AppInstance2withUbuntu1804.PublicIp,
                    ],
                ]
